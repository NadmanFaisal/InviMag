const express = require('express');
const router = express.Router();
const Product = require('../models/Product')

router.post('/Products', async function (req, res, next ){

    var product = new Product({
        name: req.body.name,
        quantity: req.body.quantity,
        buying_price: req.body.buying_price,
        selling_price: req.body.selling_price,
        category: req.body.category,
        in_stock: req.body.in_stock,
        business_owner: req.body.business_owner
    });

    try{
        await product.save();
        res.status(201).json(product);

    }catch (error){
        next(error);
    }
});

router.get('/Products/', async function (req, res){
        
    try{
        const products = await Product.find();
        res.json({"Products" : products});
    } catch (error){
        res.status(500).json({ error: 'An error occurred while fetching Products' });
    }

})

router.get('/Products/:id', async function (req, res){
    var productID = req.params.id;
    const products = Product.findById(productID);
    try{
    if(!product){
        res.status(404).json({"message" : "did not find product"})
    }
    res.status(200).json(product);
    } catch (error){
        res.status(500).json({ error: 'An error occurred while fetching Products' });
    }

})

router.delete('/Products/:id', function (req, res){
    try{
        
        var productID = req.params.id;
        const product = Product.findById(productID);
        if(!product){
            res.status(404).json({"message" : "did not find product"})
        }
        delete product;
        res.json(product);

    }catch(error){
        res.status(500).json({ error: 'An error occurred while fetching Products' });
    }

});


router.put('/Products/:id', function (req, res){
    try{
        var productID = req.params.id;
        const product = Product.findById(productID);
        if(!product){
            res.status(404).json({"message" : "did not find product"})
        }
        if(!(req.params.name || req.params.quantity || req.params.buying_price || req.params.selling_price || req.params.category || req.params.in_stock || req.params.businessOwner )){
            res.status(404).json({ error: 'An input for the fields is missing' });
        }
    
        var updated_product ={
            "name": (req.params.name),
            "quantity": (req.params.quantity),
            "buying_price": (req.params.buying_price),
            "selling_price": (req.params.selling_price),
            "category": (req.params.category),
            "in_stock": (req.params.in_stock),
            "businessOwner":(req.params.businessOwner)
        };
        product = updated_product;
        res.json(product);
    }catch(error){
        res.status(500).json({ error: 'An error occurred while fetching Products' });
    }
});


router.patch('/Products/:id', function (req, res){
    try{
        var productID = req.params.id;
        const product = Product.findById(productID);
        if(!product){
            res.status(404).json({"message" : "did not find product"})
        }
        var updated_product ={
            "name": (req.params.name || product.name),
            "quantity": (req.params.quantity || product.quantity),
            "buying_price": (req.params.buying_price || product.buying_price),
            "selling_price": (req.params.selling_price || product.selling_price),
            "category": (req.params.category || product.category),
            "in_stock": (req.params.in_stock || product.in_stock),
            "businessOwner":(req.params.businessOwner || product.businessOwner)
        };
        product = updated_product;
        res.json(product);
    }catch(error){
        res.status(500).json({ error: 'An error occurred while fetching Products' });
    }
});

module.exports = router;